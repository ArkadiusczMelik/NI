[{"H:\\react\\niar\\src\\index.js":"1","H:\\react\\niar\\src\\CryptoContext.js":"2","H:\\react\\niar\\src\\aws-exports.js":"3","H:\\react\\niar\\src\\App.js":"4","H:\\react\\niar\\src\\NavBar.jsx":"5","H:\\react\\niar\\src\\pages\\HomePage.js":"6","H:\\react\\niar\\src\\components\\Header.js":"7","H:\\react\\niar\\src\\pages\\CoinPage.js":"8","H:\\react\\niar\\src\\components\\CoinTable.js":"9","H:\\react\\niar\\src\\components\\Banner\\Banner.js":"10","H:\\react\\niar\\src\\config\\api.js":"11","H:\\react\\niar\\src\\components\\CoinInfo.js":"12","H:\\react\\niar\\src\\config\\data.js":"13","H:\\react\\niar\\src\\components\\Banner\\Slider.js":"14","H:\\react\\niar\\src\\components\\SelectButton.js":"15"},{"size":559,"mtime":1676012518299,"results":"16","hashOfConfig":"17"},{"size":637,"mtime":1676213062340,"results":"18","hashOfConfig":"17"},{"size":1300,"mtime":1675261163436,"results":"19","hashOfConfig":"17"},{"size":1369,"mtime":1676299793758,"results":"20","hashOfConfig":"17"},{"size":848,"mtime":1675958751193,"results":"21","hashOfConfig":"17"},{"size":256,"mtime":1676195982020,"results":"22","hashOfConfig":"17"},{"size":1273,"mtime":1676217619737,"results":"23","hashOfConfig":"17"},{"size":4371,"mtime":1676313209361,"results":"24","hashOfConfig":"17"},{"size":7049,"mtime":1676300142238,"results":"25","hashOfConfig":"17"},{"size":1599,"mtime":1675973216327,"results":"26","hashOfConfig":"17"},{"size":630,"mtime":1675970945837,"results":"27","hashOfConfig":"17"},{"size":3499,"mtime":1676313843730,"results":"28","hashOfConfig":"17"},{"size":265,"mtime":1676307219716,"results":"29","hashOfConfig":"17"},{"size":2244,"mtime":1676212724251,"results":"30","hashOfConfig":"17"},{"size":841,"mtime":1676313647359,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"elnc9j",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"H:\\react\\niar\\src\\index.js",["72","73"],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {Amplify} from 'aws-amplify';\nimport config from './aws-exports'\n\nimport NavBar from './NavBar';\nimport './NavBar.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport CryptoContext from './CryptoContext';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nAmplify.configure(config);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n<CryptoContext>\n<App/>\n</CryptoContext>\n \n\n);\n\n\n\n\n\n  \n\n\n",["74","75"],"H:\\react\\niar\\src\\CryptoContext.js",[],"H:\\react\\niar\\src\\aws-exports.js",[],"H:\\react\\niar\\src\\App.js",["76","77","78","79","80"],"import ray from './img/ray.svg';\nimport './App.css';\nimport  ReactDOM from 'react-dom';\nimport './index.css';\nimport React from 'react';\nimport NavBar from './NavBar';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CoinPage from './pages/CoinPage';\nimport {BrowserRouter,Route, Router, Routes} from \"react-router-dom\";\nimport { makeStyles, withTheme } from '@mui/styles';\n\n\n\n\n\nfunction App() {\n\nconst useStyles=makeStyles(()=>({\nApp:{\n\n  backgroundColor:\"#14161a\",\n  color:\"white\",\n  minHeight:\"100vh\",\n\n},\n}));\n\nconst classes = useStyles();\n  return (\n    \n  <BrowserRouter>\n  <div className={classes.App}>\n    <Header/>\n    <Routes>\n    <Route path=\"/\" element={<HomePage/>} exact/>\n    <Route path=\"/coins/:id\" element={<CoinPage/>}/>\n    </Routes>\n  </div>\n  </BrowserRouter>\n    \n  );\n}\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={ray} className=\"App-logo\" alt=\"ray\" />\n        <p>\n          Welcome to best analytics platform in crypto world!\n        </p>\n        <button\n          className=\"App-link\"\n          href=\"markup/login.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <a href='markup/login.html'>\n           \n          </a>\n        </button>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","H:\\react\\niar\\src\\NavBar.jsx",["81","82","83","84","85","86","87"],"import React from 'react';\r\nimport './NavBar.css';\r\nimport ray from './img/ni.png';\r\nconst NavBar = ()=>{\r\n\r\nreturn <header className='header'>\r\n    <nav className='nav'>\r\n<div className=\"headerComp\"> \r\n    <img src={ray} alt=\"logo\"  className='app-logo'/>\r\n    </div>\r\n\r\n    <div className='itemHeader'>\r\n <h1 className='app-header'>NAZAR INTELLIGENCE</h1>\r\n</div>\r\n \r\n <div className='link-wrapper'>\r\n\r\n    <div className='item'>\r\n    <a>Analytics</a>\r\n</div>\r\n\r\n<div className='item'>\r\n    <a>News</a>\r\n</div>\r\n\r\n<div className='item'>\r\n    <a>Learning</a>\r\n</div>\r\n\r\n<div className='item'>\r\n    <a>Diary</a>\r\n</div>\r\n\r\n<div className='item'>\r\n    <a>Top Traders</a>\r\n</div>\r\n\r\n<div className='item'>\r\n    <a>FAQ</a>\r\n</div>\r\n\r\n<div className='item'>\r\n    <a>Login</a>\r\n</div> \r\n\r\n</div>\r\n</nav>\r\n</header>\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default NavBar;","H:\\react\\niar\\src\\pages\\HomePage.js",[],"H:\\react\\niar\\src\\components\\Header.js",["88"],"import { AppBar,Container, MenuItem, Toolbar,Select, Typography } from '@mui/material';\r\nimport { createTheme,ThemeProvider } from '@mui/material/styles';\r\n\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { CryptoState } from '../CryptoContext';\r\nimport './header.css';\r\n\r\n\r\n\r\nconst lightTheme= createTheme({\r\n  palette:{\r\n    primary:{\r\n      main: \"#fff\",\r\n    },\r\n    mode: \"dark\",\r\n  },\r\n\r\n  text: {\r\n      primary: '#fff',\r\n   \r\n    },\r\n  \r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const {currency,setCurrency} = CryptoState();\r\n  \r\n  console.log(currency);\r\n \r\n  return (\r\n    <ThemeProvider theme={lightTheme}>\r\n    <AppBar color='transparent' position='static'>\r\n      <Container>\r\n      <Toolbar>\r\n<Typography><h1 className='app-header'>CRYPTO OBSERVER</h1></Typography>\r\n<Select variant=\"outlined\" style={{\r\n  color:\"white\",\r\n  width:100,\r\n  height:50,\r\n  marginLeft:500,\r\nborderColor:\"white\",\r\n}}\r\nvalue={currency}\r\nonChange={(e) => setCurrency(e.target.value)}\r\n\r\n>\r\n  <MenuItem value={\"USD\"} className=\"menu-item\">USD</MenuItem>\r\n  <MenuItem value={\"KZT\"} className=\"menu-item\">KZT</MenuItem>\r\n</Select>\r\n      </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","H:\\react\\niar\\src\\pages\\CoinPage.js",["89","90","91"],"\r\nimport { makeStyles } from '@mui/styles';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SingleCoin } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport CoinInfo from '../components/CoinInfo';\r\nimport { styled } from '@mui/material/styles'\r\nimport { ThemeProvider,createTheme } from '@mui/material/styles';\r\nimport { LinearProgress, Typography } from '@mui/material';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport  numberWithCommas  from '../components/CoinTable';\r\n\r\n\r\n\r\nconst CoinPage = () => {\r\n\r\n  const theme = createTheme();\r\n\r\n\r\n  const {id} = useParams();\r\n  const [coin,setCoin] = useState();\r\n\r\n  const {currency,symbol} = CryptoState();\r\n\r\n  const fetchCoin = async()=>{\r\n\r\n    const {data} = await axios.get(SingleCoin(id));\r\n\r\n    setCoin(data);\r\n    \r\n  }\r\n\r\n  \r\n const useStyles = styled(\"div\")(({theme}) => ({\r\n  \r\n  container: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n  sidebar: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: 25,\r\n    borderRight: \"2px solid grey\",\r\n  },\r\n\r\n\r\n }));\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    fetchCoin();\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"violet\" }} />;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div style={{\r\n\r\n  display: \"flex\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}\r\n}>\r\n      <div style={{\r\n\r\n  width: \"30%\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"100%\",\r\n  },\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  marginTop: 25,\r\n  borderRight: \"2px solid grey\",\r\n}}>\r\n      <img\r\n          src={coin?.image.large}\r\n          alt={coin?.name}\r\n          height=\"200\"\r\n          style={{ marginBottom: 20}}\r\n        />\r\n\r\n<Typography variant='h3' style={{\r\n      fontWeight: \"bold\",\r\n      marginBottom: 20,\r\n      fontFamily: \"Montserrat\",\r\n\r\n\r\n    }}>{coin?.name}\r\n    </Typography>\r\n\r\n    <Typography variant='subtitle1' style={{\r\n      width:\"100%\",\r\n      fontFamily:\"Montserrat\",\r\n      padding:25,\r\n      paddingBottom:15,\r\n      paddingTop:0,\r\n      textAlign:\"justify\",\r\n    }}>{ReactHtmlParser(coin?.description.en.split(\". \")[0])}.</Typography>\r\n\r\n<div style={\r\n  {\r\n    alignSelf: \"start\",\r\n    padding: 25,\r\n    paddingTop: 10,\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      alignItems: \"start\",\r\n    },\r\n  }\r\n}>\r\n  <span style={{ display: \"flex\" }}>\r\n  <Typography variant=\"h5\" style={{\r\n  fontWeight: \"bold\",\r\n  marginBottom: 20,\r\n  fontFamily: \"Montserrat\",\r\n\r\n }}>\r\n  Rank:\r\n  </Typography>\r\n  &nbsp; &nbsp;\r\n  \r\n  <Typography variant=\"h5\" style={{\r\n        fontFamily: \"Montserrat\",\r\n      }}>{\r\n      coin?.market_cap_rank\r\n      }</Typography>\r\n  </span>\r\n  <span style={{ display: \"flex\" }}>\r\n  <Typography variant=\"h5\" style={{\r\n  fontWeight: \"bold\",\r\n  marginBottom: 20,\r\n  fontFamily: \"Montserrat\",\r\n\r\n }}>\r\n  Current Price:\r\n  </Typography>\r\n\r\n  &nbsp; &nbsp;\r\n\r\n  <Typography\r\n  variant=\"h5\"\r\n  style={{\r\n  fontFamily:\"Montserrat\",\r\n  }}>\r\n  {symbol}{\"\"}{(coin?.market_data.current_price[currency.toLowerCase()])}\r\n  </Typography>\r\n  </span>\r\n\r\n  <span style={{ display: \"flex\" }}>\r\n\r\n <Typography variant=\"h5\" style={{\r\n  fontWeight: \"bold\",\r\n  marginBottom: 20,\r\n  fontFamily: \"Montserrat\",\r\n\r\n }}>\r\n Market Cap:\r\n </Typography>\r\n  &nbsp; &nbsp;\r\n<Typography\r\n      variant=\"h5\"\r\n      style={{\r\n      fontFamily: \"Montserrat\",\r\n      }}>\r\n  {symbol}{\" \"}\r\n  {(coin?.market_data.market_cap[currency.toLowerCase()].toString().slice(0, -6))}\r\nM\r\n</Typography>\r\n          </span>\r\n  \r\n        </div>\r\n\r\n        \r\n      </div>\r\n\r\n      <CoinInfo coin={coin}/>\r\n\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinPage;\r\n","H:\\react\\niar\\src\\components\\CoinTable.js",["92"],"import React, { useEffect, useState } from 'react'\r\nimport { CoinList } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport axios from 'axios';\r\nimport './CoinTable.css';\r\nimport { Container, TextField,createTheme, ThemeProvider, Typography, TableContainer, LinearProgress, Table, TableHead, TableRow, TableCell, TableBody, Paper} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {  useNavigate } from 'react-router-dom';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\nconst CoinTable = ()=> {\r\n\r\n    const {currency,symbol} = CryptoState();\r\n\r\n    const [coins,setCoins]= useState([]);\r\n\r\n    const [search,setSearch]= useState(\"\");\r\n\r\n    const [loading,setLoading]= useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n\r\n    const fetchCoins = async () => {\r\n\r\n    setLoading(true);\r\n\r\n        const {data} =  await axios.get(CoinList(currency));\r\n\r\n    setCoins(data);\r\n    setLoading(false);\r\n\r\n    };\r\n\r\n  \r\n\r\n    useEffect(()=> {\r\n\r\n        fetchCoins();\r\n\r\n    },[currency]);\r\n\r\n    const handleSearch = () => {\r\n        return coins.filter(\r\n          (coin) =>\r\n            coin.name.toLowerCase().includes(search) ||\r\n            coin.symbol.toLowerCase().includes(search)\r\n        );\r\n      };\r\n\r\n    const lightTheme= createTheme({\r\n        palette:{\r\n          primary:{\r\n            main: \"#fff\",\r\n          },\r\n          mode: \"dark\",\r\n        },\r\n\r\n        text: {\r\n            primary: '#fff',\r\n         \r\n          },\r\n        \r\n        });\r\n\r\n\r\n        const useStyles = makeStyles({\r\n            row: {\r\n              backgroundColor: \"#16171a\",\r\n              cursor: \"pointer\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#131111\",\r\n              },\r\n              fontFamily: \"Montserrat\",\r\n            },\r\n            pagination: {\r\n              \"& .MuiPaginationItem-root\": {\r\n                color: \"gold\",\r\n              },\r\n            },\r\n          });\r\n        \r\n          const classes = useStyles();\r\n\r\n          const navigate = useNavigate();\r\n\r\n          \r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={lightTheme}>\r\n    <Container style={{textAlign:\"center\"}}>\r\n    <Typography variant='h3'\r\n    style={\r\n        {textAlign:\"center\",\r\n        margin: 18,\r\n        fontFamily:\"Montserrat\",\r\n    }\r\n    }\r\n    >\r\n        Cryptocurrency rate by Coin Market Cap \r\n    </Typography>\r\n\r\n    <TextField className='search-lable'\r\n    label=\"Search any for cruptocurrency...\"\r\n    variant='outlined'\r\n    style={{\r\n        marginBottom:20,\r\n        width:\"100%\",\r\n        color:\"white\",\r\n        borderColor:\"white\",\r\n    }}\r\n    onChange={(e)=>setSearch(e.target.value)}\r\n    />\r\n\r\n    <TableContainer component={Paper}>\r\n{loading ? (\r\n            <LinearProgress style={{ backgroundColor: \"violet\" }} />\r\n          ) : (\r\n\r\n            <Table aria-label='simple table'>\r\n                <TableHead style={{ backgroundColor: \"indigo\",background:\"linear-gradient(to right bottom, #01fdf1, #9603f8)\" }}>\r\n                <TableRow>\r\n                  {[\"Crypto\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                    <TableCell\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontWeight: \"700\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                      key={head}\r\n                      align={head === \"Crypto\" ? \"\" : \"right\"}\r\n                    >\r\n                      {head}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                    {handleSearch().slice((page - 1)*10,(page - 1)*10+10)\r\n                  .map((row) => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={() =>  navigate(`/coins/${row.id}`)}\r\n                        className={classes.row}\r\n                        key={row.name}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            gap: 15,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={row?.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10 }}\r\n                          />\r\n                          <div\r\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"uppercase\",\r\n                                fontSize: 22,\r\n                              }}\r\n                            >\r\n                              {row.symbol}\r\n                            </span>\r\n                            <span style={{ color: \"white\" }}>\r\n                              {row.name}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(row.current_price.toFixed(2))}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                            fontWeight: 500,\r\n                          }}\r\n                        >\r\n                          {profit && \"+\"}\r\n                          {row.price_change_percentage_24h.toFixed(2)}%\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.market_cap.toString().slice(0, -6)\r\n                          )}\r\n                          M\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n\r\n    </TableContainer>\r\n    <Pagination\r\n          count={(handleSearch()?.length / 10).toFixed(0)}\r\n          style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          classes={{ ul: classes.pagination }}\r\n          onChange={(_, value) => {\r\n            setPage(value);\r\n            window.scroll(0, 450);\r\n          }}\r\n        />\r\n    </Container>\r\n\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinTable;\r\n","H:\\react\\niar\\src\\components\\Banner\\Banner.js",["93"],"import { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { flexbox } from '@mui/system';\r\nimport \"./banner.jpeg\";\r\n\r\nimport React from 'react'\r\nimport { Typography } from '@mui/material';\r\nimport Slider from './Slider';\r\n\r\nconst useStyles= makeStyles(()=>({\r\n\r\n    banner:{\r\n        backgroundImage:\"url(https://www.numerama.com/wp-content/uploads/2017/12/bitcoin.jpg)\",\r\n\r\n    },\r\n    bannerContent:{\r\n        height:400,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        paddingTop:45,\r\n        justifyContent:\"space-around\",\r\n\r\n    },\r\n    tagHeader:{\r\n        display: \"flex\",\r\n    height: \"40%\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\nconst Banner = () => {\r\n    const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.banner}>\r\n    <Container className={classes.bannerContent}>\r\n        <div className={classes.tagHeader}>\r\n        <Typography variant=\"h2\"\r\n        style={{\r\n            fontWeight:\"bold\",\r\n            marginBottom:20,\r\n            fontFamily:\"Montserrat\",\r\n        }\r\n        }\r\n        >\r\n            Best Crypto Observer\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\"\r\n        style={{\r\n            color:\"darkgrey\",\r\n            textTransform:\"capitralize\",\r\n            fontFamily:\"Montserrat\",\r\n        }\r\n        }\r\n        >Get any information on cryptocurrency for your fundamental analysis!</Typography>\r\n        </div>\r\n        <Slider/>\r\n    </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner;\r\n","H:\\react\\niar\\src\\config\\api.js",[],"H:\\react\\niar\\src\\components\\CoinInfo.js",["94"],"import { CircularProgress, createTheme, ThemeProvider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { HistoricalChart } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport { chartDays } from '../config/data';\r\nimport SelectButton from './SelectButton';\r\nimport { Chart as ChartJS, registerables } from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2'\r\nChartJS.register(...registerables);\r\n\r\nconst CoinInfo = ({coin}) => {\r\n\r\n  const theme = createTheme();\r\n\r\n  const [historicalData,setHistoricalData] = useState();\r\n\r\n  const [days,setDays] = useState(1);\r\n\r\n  const {currency} = CryptoState();\r\n\r\n  const [flag,setflag] = useState(false);\r\n\r\n  const fetchHistoricData = async ()=>{\r\n\r\n    const {data} = await axios.get(HistoricalChart(coin.id,days,currency));\r\n\r\n    setflag(true);\r\n\r\n    setHistoricalData(data.prices);\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n    fetchHistoricData();\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[currency,days]);\r\n\r\n  const darkTheme= createTheme({\r\n    palette:{\r\n      primary:{\r\n        main: \"#fff\",\r\n      },\r\n      mode: \"dark\",\r\n    },\r\n\r\n    text: {\r\n        primary: '#fff',\r\n     \r\n      },\r\n    \r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n  <div style={{\r\n      width: \"75%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 25,\r\n      padding: 40,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n        marginTop: 0,\r\n        padding: 20,\r\n        paddingTop: 0,\r\n      },\r\n    }}>\r\n       {!historicalData | flag===false ? (\r\n          <CircularProgress\r\n            style={{ color: \"#01fdf1\" }}\r\n            size={230}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historicalData.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time =\r\n                    date.getHours() > 12\r\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                  return days === 1 ? time : date.toLocaleDateString();\r\n                }),\r\n\r\n      datasets: [{\r\n          data: historicalData.map((coin) => coin[1]),\r\n          label: `Price ( Past ${days} Days ) in ${currency}`,\r\n          borderColor: \"#01fdf1\",\r\n          },\r\n          ],\r\n        }}\r\n          options={{\r\n          elements: {\r\n          point: {\r\n            radius: 1,\r\n                  },\r\n              },\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                justifyContent: \"space-around\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {chartDays.map((day) => (\r\n                <SelectButton\r\n                  key={day.value}\r\n                  onClick={() => {setDays(day.value);\r\n                    setflag(false);\r\n                  }}\r\n                  selected={day.value === days}\r\n                >\r\n                  {day.label}\r\n                </SelectButton>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinInfo;\r\n","H:\\react\\niar\\src\\config\\data.js",[],"H:\\react\\niar\\src\\components\\Banner\\Slider.js",["95","96"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@mui/styles';\r\nimport { theme } from 'antd';\r\nimport { CryptoState } from '../../CryptoContext';\r\nimport axios from 'axios';\r\nimport { TrendingCoins } from '../../config/api';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\nslider:{\r\n\r\n    height:\"40%\",\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n},\r\n\r\nsliderItem:{\r\n    display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      cursor: \"pointer\",\r\n      textTransform: \"uppercase\",\r\n      color: \"white\",\r\n    },\r\n\r\n}));\r\n\r\nexport function numberWithCommas(x){\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\"\");\r\n}\r\n\r\n\r\nconst Slider = () => {\r\n\r\n    const [trending, setTrending] = useState([]);\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const fetchTrendingCoins = async ()=>  {\r\n\r\n    const {data} = await axios.get(TrendingCoins(currency));\r\n    setTrending(data);\r\n  }\r\n  console.log(trending);\r\n\r\n  useEffect(()=>{\r\n\r\n    fetchTrendingCoins();\r\n },[currency]);\r\n\r\n\r\nconst classes = useStyles();\r\n\r\nconst items= trending.map((coin)=>{\r\n    let profit = coin?.price_change_percentage_24h >= 0;\r\nreturn(\r\n<Link className={classes.sliderItem}\r\n    to ={`/coins/${coin.id}`}>\r\n<img\r\n src={coin?.image}\r\n alt={coin.name}\r\n height=\"80\"\r\n style={{ marginBottom: 10 }}\r\n\r\n></img>\r\n<span>{coin?.symbol}&nbsp;\r\n<span\r\nstyle={{\r\n    color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n    fontWeight: 500,\r\n  }}\r\n>\r\n    {profit && \"+\"}\r\n    {coin?.price_change_percentage_24h?.toFixed(2)}%\r\n</span>\r\n</span>\r\n<span style={{ fontSize: 22, fontWeight: 500 }}>\r\n          {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n        </span>\r\n    </Link>\r\n   \r\n\r\n)\r\n\r\n})\r\n\r\nconst responsive = {\r\n    0:{\r\n        items:2,\r\n    },\r\n    512:{\r\n        items:7,\r\n    }\r\n};\r\n  return (\r\n    <div className={classes.slider}>\r\n      <AliceCarousel \r\n    mouseTracking\r\n    infinite\r\n    autoPlayInterval={1000}\r\n    animationDuration={1500}\r\n    disableDotsControl\r\n    responsive={responsive}\r\n    autoPlay\r\n    items={items}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slider;\r\n","H:\\react\\niar\\src\\components\\SelectButton.js",[],{"ruleId":"97","severity":1,"message":"98","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":23},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"106","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":11},{"ruleId":"97","severity":1,"message":"107","line":3,"column":9,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"108","line":10,"column":30,"nodeType":"99","messageId":"100","endLine":10,"endColumn":36},{"ruleId":"97","severity":1,"message":"109","line":11,"column":22,"nodeType":"99","messageId":"100","endLine":11,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":19,"column":5,"nodeType":"112","endLine":19,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":23,"column":5,"nodeType":"112","endLine":23,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":27,"column":5,"nodeType":"112","endLine":27,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":31,"column":5,"nodeType":"112","endLine":31,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":35,"column":5,"nodeType":"112","endLine":35,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":39,"column":5,"nodeType":"112","endLine":39,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":43,"column":5,"nodeType":"112","endLine":43,"endColumn":8},{"ruleId":"97","severity":1,"message":"113","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":21},{"ruleId":"97","severity":1,"message":"114","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"115","line":15,"column":9,"nodeType":"99","messageId":"100","endLine":15,"endColumn":25},{"ruleId":"97","severity":1,"message":"116","line":38,"column":8,"nodeType":"99","messageId":"100","endLine":38,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":46,"column":7,"nodeType":"119","endLine":46,"endColumn":17,"suggestions":"120"},{"ruleId":"97","severity":1,"message":"121","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},{"ruleId":"97","severity":1,"message":"122","line":11,"column":10,"nodeType":"99","messageId":"100","endLine":11,"endColumn":15},{"ruleId":"97","severity":1,"message":"123","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":15},{"ruleId":"117","severity":1,"message":"124","line":49,"column":4,"nodeType":"119","endLine":49,"endColumn":14,"suggestions":"125"},"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'ray' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'withTheme' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useNavigate' is defined but never used.","'makeStyles' is defined but never used.","'numberWithCommas' is defined but never used.","'useStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCoins'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'flexbox' is defined but never used.","'Chart' is defined but never used.","'theme' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTrendingCoins'. Either include it or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [currency, fetchCoins]",{"range":"134","text":"135"},"Update the dependencies array to be: [currency, fetchTrendingCoins]",{"range":"136","text":"137"},[1149,1159],"[currency, fetchCoins]",[1126,1136],"[currency, fetchTrendingCoins]"]