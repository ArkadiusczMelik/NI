[{"H:\\react\\niar\\src\\index.js":"1","H:\\react\\niar\\src\\CryptoContext.js":"2","H:\\react\\niar\\src\\aws-exports.js":"3","H:\\react\\niar\\src\\App.js":"4","H:\\react\\niar\\src\\pages\\HomePage.js":"5","H:\\react\\niar\\src\\components\\Header.js":"6","H:\\react\\niar\\src\\pages\\CoinPage.js":"7","H:\\react\\niar\\src\\components\\CoinTable.js":"8","H:\\react\\niar\\src\\components\\Banner\\Banner.js":"9","H:\\react\\niar\\src\\config\\api.js":"10","H:\\react\\niar\\src\\components\\CoinInfo.js":"11","H:\\react\\niar\\src\\config\\data.js":"12","H:\\react\\niar\\src\\components\\Banner\\Slider.js":"13","H:\\react\\niar\\src\\components\\SelectButton.js":"14","H:\\react\\niar\\src\\components\\Login.js":"15","H:\\react\\niar\\src\\components\\LogoutButton.js":"16"},{"size":506,"mtime":1676390247305,"results":"17","hashOfConfig":"18"},{"size":637,"mtime":1676213062340,"results":"19","hashOfConfig":"18"},{"size":1366,"mtime":1676475643132,"results":"20","hashOfConfig":"18"},{"size":6878,"mtime":1676483014786,"results":"21","hashOfConfig":"18"},{"size":256,"mtime":1676195982020,"results":"22","hashOfConfig":"18"},{"size":1631,"mtime":1676476832413,"results":"23","hashOfConfig":"18"},{"size":4371,"mtime":1676313209361,"results":"24","hashOfConfig":"18"},{"size":7049,"mtime":1676300142238,"results":"25","hashOfConfig":"18"},{"size":1599,"mtime":1675973216327,"results":"26","hashOfConfig":"18"},{"size":630,"mtime":1675970945837,"results":"27","hashOfConfig":"18"},{"size":3499,"mtime":1676313843730,"results":"28","hashOfConfig":"18"},{"size":265,"mtime":1676307219716,"results":"29","hashOfConfig":"18"},{"size":2244,"mtime":1676212724251,"results":"30","hashOfConfig":"18"},{"size":841,"mtime":1676313647359,"results":"31","hashOfConfig":"18"},{"size":608,"mtime":1675747061785,"results":"32","hashOfConfig":"18"},{"size":1029,"mtime":1676393117437,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"elnc9j",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},"H:\\react\\niar\\src\\index.js",["76"],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {Amplify} from 'aws-amplify';\nimport config from './aws-exports'\n\n\nimport { BrowserRouter } from 'react-router-dom';\nimport CryptoContext from './CryptoContext';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nAmplify.configure(config);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n<CryptoContext>\n<App/>\n</CryptoContext>\n \n\n);\n\n\n\n\n\n  \n\n\n",["77","78"],"H:\\react\\niar\\src\\CryptoContext.js",[],"H:\\react\\niar\\src\\aws-exports.js",[],"H:\\react\\niar\\src\\App.js",["79","80","81","82","83","84","85","86","87"],"import ray from './img/ray.svg';\nimport './App.css';\nimport  ReactDOM from 'react-dom';\nimport { Amplify, Hub,Auth } from 'aws-amplify';\nimport awsExports from './aws-exports';\nimport { withAuthenticator,useAuthenticator,Authenticator, useTheme, View, Image, Text, Heading, Button } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\nimport './login.css';\nimport './index.css';\nimport React from 'react';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CoinPage from './pages/CoinPage';\nimport {BrowserRouter,Route, Router, Routes} from \"react-router-dom\";\nimport { makeStyles, withTheme } from '@mui/styles';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport awsConfig from './aws-exports';\n\nAuth.configure(awsExports);\n\n\nconst components = {\n  Header() {\n    const { tokens } = useTheme();\n\n    return (\n      <View textAlign=\"center\" padding={tokens.space.large}>\n        <Image\n          alt=\"Amplify logo\"\n          src=\"https://docs.amplify.aws/assets/logo-dark.svg\"\n        />\n      </View>\n    );\n  },\n\n  Footer() {\n    const { tokens } = useTheme();\n\n    return (\n      <View textAlign=\"center\" padding={tokens.space.large}>\n        <Text color={tokens.colors.neutral[80]}>\n          &copy; All Rights Reserved 2023\n        </Text>\n      </View>\n    );\n  },\n\n  SignIn: {\n    Header() {\n      const { tokens } = useTheme();\n\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Sign in to your account NI\n        </Heading>\n      );\n    },\n    Footer() {\n      const { toResetPassword } = useAuthenticator();\n\n      return (\n        <View textAlign=\"center\">\n          <Button\n            fontWeight=\"normal\"\n            onClick={toResetPassword}\n            size=\"small\"\n            variation=\"link\"\n          >\n            Reset Password\n          </Button>\n        </View>\n      );\n    },\n  },\n\n  SignUp: {\n    Header() {\n      const { tokens } = useTheme();\n\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Create a new account\n        </Heading>\n      );\n    },\n    Footer() {\n      const { toSignIn } = useAuthenticator();\n\n      return (\n        <View textAlign=\"center\">\n          <Button\n            fontWeight=\"normal\"\n            onClick={toSignIn}\n            size=\"small\"\n            variation=\"link\"\n          >\n            Back to Sign In\n          </Button>\n        </View>\n      );\n    },\n  },\n  ConfirmSignUp: {\n    Header() {\n      const { tokens } = useTheme();\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Enter Information:\n        </Heading>\n      );\n    },\n    Footer() {\n      return <Text>Footer Information</Text>;\n    },\n  },\n  SetupTOTP: {\n    Header() {\n      const { tokens } = useTheme();\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Enter Information:\n        </Heading>\n      );\n    },\n    Footer() {\n      return <Text>Footer Information</Text>;\n    },\n  },\n  ConfirmSignIn: {\n    Header() {\n      const { tokens } = useTheme();\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Enter Information:\n        </Heading>\n      );\n    },\n    Footer() {\n      return <Text>Footer Information</Text>;\n    },\n  },\n  ResetPassword: {\n    Header() {\n      const { tokens } = useTheme();\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Enter Information:\n        </Heading>\n      );\n    },\n    Footer() {\n      return <Text>Footer Information</Text>;\n    },\n  },\n  ConfirmResetPassword: {\n    Header() {\n      const { tokens } = useTheme();\n      return (\n        <Heading\n          padding={`${tokens.space.xl} 0 0 ${tokens.space.xl}`}\n          level={3}\n        >\n          Enter Information:\n        </Heading>\n      );\n    },\n    Footer() {\n      return <Text>Footer Information</Text>;\n    },\n  },\n};\n\nconst formFields = {\n  signIn: {\n    username: {\n      placeholder: 'Enter your email',\n    },\n  },\n  signUp: {\n    password: {\n      label: 'Password:',\n      placeholder: 'Enter your Password:',\n      isRequired: false,\n      order: 2,\n    },\n    confirm_password: {\n      label: 'Confirm Password:',\n      order: 1,\n    },\n  },\n  forceNewPassword: {\n    password: {\n      placeholder: 'Enter your Password:',\n    },\n  },\n  resetPassword: {\n    username: {\n      placeholder: 'Enter your email:',\n    },\n  },\n  confirmResetPassword: {\n    confirmation_code: {\n      placeholder: 'Enter your Confirmation Code:',\n      label: 'New Label',\n      isRequired: false,\n    },\n    confirm_password: {\n      placeholder: 'Enter your Password Please:',\n    },\n  },\n  setupTOTP: {\n    QR: {\n      totpIssuer: 'test issuer',\n      totpUsername: 'amplify_qr_test_user',\n    },\n    confirmation_code: {\n      label: 'New Label',\n      placeholder: 'Enter your Confirmation Code:',\n      isRequired: false,\n    },\n  },\n  confirmSignIn: {\n    confirmation_code: {\n      label: 'New Label',\n      placeholder: 'Enter your Confirmation Code:',\n      isRequired: false,\n    },\n  },\n};\n\n\nfunction App() {\n  \n  \n\n\n\nconst useStyles=makeStyles(()=>({\nApp:{\n\n  backgroundColor:\"#14161a\",\n\n  color:\"white\",\n  minHeight:\"100vh\",\n\n},\n}));\n\nconst classes = useStyles();\n  return (\n  \n    <Authenticator formFields={formFields} components={components}>\n    {({ signOut}) => (\n  <BrowserRouter>\n\n  <div className={classes.App}>\n\n    <Header logOut ={signOut}/>\n    <Routes>\n    <Route path=\"/\" element={<HomePage/>} exact/>\n    <Route path=\"/coins/:id\" element={<CoinPage/>}/>\n    </Routes>\n  </div>\n  </BrowserRouter>\n  )}\n  </Authenticator>\n\n  );\n}\n\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={ray} className=\"App-logo\" alt=\"ray\" />\n        <p>\n          Welcome to best analytics platform in crypto world!\n        </p>\n        <button\n          className=\"App-link\"\n          href=\"markup/login.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <a href='markup/login.html'>\n           \n          </a>\n        </button>\n      </header>\n    </div>\n  );\n}*/\n\n\n/*\n <Authenticator socialProviders={['google']}>\n    {({ signOut}) => (\n  <BrowserRouter>\n  <div className={classes.App}>\n\n    <Header logOut ={signOut}/>\n    <Routes>\n    <Route path=\"/\" element={<HomePage/>} exact/>\n    <Route path=\"/coins/:id\" element={<CoinPage/>}/>\n    </Routes>\n  </div>\n  </BrowserRouter>\n  )}\n  </Authenticator>\n*/ \n\nexport default withAuthenticator(App);\n","H:\\react\\niar\\src\\pages\\HomePage.js",[],"H:\\react\\niar\\src\\components\\Header.js",["88","89","90"],"import { AppBar,Container, MenuItem, Toolbar,Select, Typography } from '@mui/material';\r\nimport { createTheme,ThemeProvider } from '@mui/material/styles';\r\nimport { Authenticator } from '@aws-amplify/ui-react';\r\nimport React from 'react'\r\nimport { Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { CryptoState } from '../CryptoContext';\r\nimport './header.css';\r\nimport LogoutButton from './LogoutButton';\r\n\r\n\r\n\r\nconst lightTheme= createTheme({\r\n  palette:{\r\n    primary:{\r\n      main: \"#fff\",\r\n    },\r\n    mode: \"dark\",\r\n  },\r\n\r\n  text: {\r\n      primary: '#fff',\r\n   \r\n    },\r\n  \r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Header(props) {\r\n\r\n\r\n  const handleLogout =()=>{\r\n    props.logOut();\r\n  }\r\n\r\n  const {currency,setCurrency} = CryptoState();\r\n  \r\n  console.log(currency);\r\n \r\n  return (\r\n    <ThemeProvider theme={lightTheme}>\r\n    <AppBar color='transparent' position='static'>\r\n    <Nav>\r\n      <Container>\r\n      <Toolbar>\r\n<Typography><h1 className='app-header'>CRYPTO OBSERVER</h1></Typography>\r\n<Select variant=\"outlined\" style={{\r\n  color:\"white\",\r\n  width:100,\r\n  height:50,\r\n  marginLeft:500,\r\nborderColor:\"white\",\r\n}}\r\nvalue={currency}\r\nonChange={(e) => setCurrency(e.target.value)}\r\n\r\n>\r\n  <MenuItem value={\"USD\"} className=\"menu-item\">USD</MenuItem>\r\n\r\n  <MenuItem value={\"KZT\"} className=\"menu-item\">KZT</MenuItem>\r\n</Select>\r\n<Nav.Link onClick={handleLogout}><LogoutButton/></Nav.Link> \r\n      </Toolbar>\r\n      \r\n       \r\n      \r\n      </Container>\r\n      </Nav>\r\n    </AppBar>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","H:\\react\\niar\\src\\pages\\CoinPage.js",["91","92","93"],"\r\nimport { makeStyles } from '@mui/styles';\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SingleCoin } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport CoinInfo from '../components/CoinInfo';\r\nimport { styled } from '@mui/material/styles'\r\nimport { ThemeProvider,createTheme } from '@mui/material/styles';\r\nimport { LinearProgress, Typography } from '@mui/material';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport  numberWithCommas  from '../components/CoinTable';\r\n\r\n\r\n\r\nconst CoinPage = () => {\r\n\r\n  const theme = createTheme();\r\n\r\n\r\n  const {id} = useParams();\r\n  const [coin,setCoin] = useState();\r\n\r\n  const {currency,symbol} = CryptoState();\r\n\r\n  const fetchCoin = async()=>{\r\n\r\n    const {data} = await axios.get(SingleCoin(id));\r\n\r\n    setCoin(data);\r\n    \r\n  }\r\n\r\n  \r\n const useStyles = styled(\"div\")(({theme}) => ({\r\n  \r\n  container: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n  sidebar: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: 25,\r\n    borderRight: \"2px solid grey\",\r\n  },\r\n\r\n\r\n }));\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    fetchCoin();\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"violet\" }} />;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <div style={{\r\n\r\n  display: \"flex\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}\r\n}>\r\n      <div style={{\r\n\r\n  width: \"30%\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    width: \"100%\",\r\n  },\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  marginTop: 25,\r\n  borderRight: \"2px solid grey\",\r\n}}>\r\n      <img\r\n          src={coin?.image.large}\r\n          alt={coin?.name}\r\n          height=\"200\"\r\n          style={{ marginBottom: 20}}\r\n        />\r\n\r\n<Typography variant='h3' style={{\r\n      fontWeight: \"bold\",\r\n      marginBottom: 20,\r\n      fontFamily: \"Montserrat\",\r\n\r\n\r\n    }}>{coin?.name}\r\n    </Typography>\r\n\r\n    <Typography variant='subtitle1' style={{\r\n      width:\"100%\",\r\n      fontFamily:\"Montserrat\",\r\n      padding:25,\r\n      paddingBottom:15,\r\n      paddingTop:0,\r\n      textAlign:\"justify\",\r\n    }}>{ReactHtmlParser(coin?.description.en.split(\". \")[0])}.</Typography>\r\n\r\n<div style={\r\n  {\r\n    alignSelf: \"start\",\r\n    padding: 25,\r\n    paddingTop: 10,\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      alignItems: \"start\",\r\n    },\r\n  }\r\n}>\r\n  <span style={{ display: \"flex\" }}>\r\n  <Typography variant=\"h5\" style={{\r\n  fontWeight: \"bold\",\r\n  marginBottom: 20,\r\n  fontFamily: \"Montserrat\",\r\n\r\n }}>\r\n  Rank:\r\n  </Typography>\r\n  &nbsp; &nbsp;\r\n  \r\n  <Typography variant=\"h5\" style={{\r\n        fontFamily: \"Montserrat\",\r\n      }}>{\r\n      coin?.market_cap_rank\r\n      }</Typography>\r\n  </span>\r\n  <span style={{ display: \"flex\" }}>\r\n  <Typography variant=\"h5\" style={{\r\n  fontWeight: \"bold\",\r\n  marginBottom: 20,\r\n  fontFamily: \"Montserrat\",\r\n\r\n }}>\r\n  Current Price:\r\n  </Typography>\r\n\r\n  &nbsp; &nbsp;\r\n\r\n  <Typography\r\n  variant=\"h5\"\r\n  style={{\r\n  fontFamily:\"Montserrat\",\r\n  }}>\r\n  {symbol}{\"\"}{(coin?.market_data.current_price[currency.toLowerCase()])}\r\n  </Typography>\r\n  </span>\r\n\r\n  <span style={{ display: \"flex\" }}>\r\n\r\n <Typography variant=\"h5\" style={{\r\n  fontWeight: \"bold\",\r\n  marginBottom: 20,\r\n  fontFamily: \"Montserrat\",\r\n\r\n }}>\r\n Market Cap:\r\n </Typography>\r\n  &nbsp; &nbsp;\r\n<Typography\r\n      variant=\"h5\"\r\n      style={{\r\n      fontFamily: \"Montserrat\",\r\n      }}>\r\n  {symbol}{\" \"}\r\n  {(coin?.market_data.market_cap[currency.toLowerCase()].toString().slice(0, -6))}\r\nM\r\n</Typography>\r\n          </span>\r\n  \r\n        </div>\r\n\r\n        \r\n      </div>\r\n\r\n      <CoinInfo coin={coin}/>\r\n\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinPage;\r\n","H:\\react\\niar\\src\\components\\CoinTable.js",["94"],"import React, { useEffect, useState } from 'react'\r\nimport { CoinList } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport axios from 'axios';\r\nimport './CoinTable.css';\r\nimport { Container, TextField,createTheme, ThemeProvider, Typography, TableContainer, LinearProgress, Table, TableHead, TableRow, TableCell, TableBody, Paper} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {  useNavigate } from 'react-router-dom';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\nconst CoinTable = ()=> {\r\n\r\n    const {currency,symbol} = CryptoState();\r\n\r\n    const [coins,setCoins]= useState([]);\r\n\r\n    const [search,setSearch]= useState(\"\");\r\n\r\n    const [loading,setLoading]= useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n\r\n    const fetchCoins = async () => {\r\n\r\n    setLoading(true);\r\n\r\n        const {data} =  await axios.get(CoinList(currency));\r\n\r\n    setCoins(data);\r\n    setLoading(false);\r\n\r\n    };\r\n\r\n  \r\n\r\n    useEffect(()=> {\r\n\r\n        fetchCoins();\r\n\r\n    },[currency]);\r\n\r\n    const handleSearch = () => {\r\n        return coins.filter(\r\n          (coin) =>\r\n            coin.name.toLowerCase().includes(search) ||\r\n            coin.symbol.toLowerCase().includes(search)\r\n        );\r\n      };\r\n\r\n    const lightTheme= createTheme({\r\n        palette:{\r\n          primary:{\r\n            main: \"#fff\",\r\n          },\r\n          mode: \"dark\",\r\n        },\r\n\r\n        text: {\r\n            primary: '#fff',\r\n         \r\n          },\r\n        \r\n        });\r\n\r\n\r\n        const useStyles = makeStyles({\r\n            row: {\r\n              backgroundColor: \"#16171a\",\r\n              cursor: \"pointer\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#131111\",\r\n              },\r\n              fontFamily: \"Montserrat\",\r\n            },\r\n            pagination: {\r\n              \"& .MuiPaginationItem-root\": {\r\n                color: \"gold\",\r\n              },\r\n            },\r\n          });\r\n        \r\n          const classes = useStyles();\r\n\r\n          const navigate = useNavigate();\r\n\r\n          \r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={lightTheme}>\r\n    <Container style={{textAlign:\"center\"}}>\r\n    <Typography variant='h3'\r\n    style={\r\n        {textAlign:\"center\",\r\n        margin: 18,\r\n        fontFamily:\"Montserrat\",\r\n    }\r\n    }\r\n    >\r\n        Cryptocurrency rate by Coin Market Cap \r\n    </Typography>\r\n\r\n    <TextField className='search-lable'\r\n    label=\"Search any for cruptocurrency...\"\r\n    variant='outlined'\r\n    style={{\r\n        marginBottom:20,\r\n        width:\"100%\",\r\n        color:\"white\",\r\n        borderColor:\"white\",\r\n    }}\r\n    onChange={(e)=>setSearch(e.target.value)}\r\n    />\r\n\r\n    <TableContainer component={Paper}>\r\n{loading ? (\r\n            <LinearProgress style={{ backgroundColor: \"violet\" }} />\r\n          ) : (\r\n\r\n            <Table aria-label='simple table'>\r\n                <TableHead style={{ backgroundColor: \"indigo\",background:\"linear-gradient(to right bottom, #01fdf1, #9603f8)\" }}>\r\n                <TableRow>\r\n                  {[\"Crypto\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                    <TableCell\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontWeight: \"700\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                      key={head}\r\n                      align={head === \"Crypto\" ? \"\" : \"right\"}\r\n                    >\r\n                      {head}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                    {handleSearch().slice((page - 1)*10,(page - 1)*10+10)\r\n                  .map((row) => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={() =>  navigate(`/coins/${row.id}`)}\r\n                        className={classes.row}\r\n                        key={row.name}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            gap: 15,\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={row?.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10 }}\r\n                          />\r\n                          <div\r\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"uppercase\",\r\n                                fontSize: 22,\r\n                              }}\r\n                            >\r\n                              {row.symbol}\r\n                            </span>\r\n                            <span style={{ color: \"white\" }}>\r\n                              {row.name}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(row.current_price.toFixed(2))}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          align=\"right\"\r\n                          style={{\r\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                            fontWeight: 500,\r\n                          }}\r\n                        >\r\n                          {profit && \"+\"}\r\n                          {row.price_change_percentage_24h.toFixed(2)}%\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.market_cap.toString().slice(0, -6)\r\n                          )}\r\n                          M\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n\r\n    </TableContainer>\r\n    <Pagination\r\n          count={(handleSearch()?.length / 10).toFixed(0)}\r\n          style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          classes={{ ul: classes.pagination }}\r\n          onChange={(_, value) => {\r\n            setPage(value);\r\n            window.scroll(0, 450);\r\n          }}\r\n        />\r\n    </Container>\r\n\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinTable;\r\n","H:\\react\\niar\\src\\components\\Banner\\Banner.js",["95"],"import { Container } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { flexbox } from '@mui/system';\r\nimport \"./banner.jpeg\";\r\n\r\nimport React from 'react'\r\nimport { Typography } from '@mui/material';\r\nimport Slider from './Slider';\r\n\r\nconst useStyles= makeStyles(()=>({\r\n\r\n    banner:{\r\n        backgroundImage:\"url(https://www.numerama.com/wp-content/uploads/2017/12/bitcoin.jpg)\",\r\n\r\n    },\r\n    bannerContent:{\r\n        height:400,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        paddingTop:45,\r\n        justifyContent:\"space-around\",\r\n\r\n    },\r\n    tagHeader:{\r\n        display: \"flex\",\r\n    height: \"40%\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\nconst Banner = () => {\r\n    const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.banner}>\r\n    <Container className={classes.bannerContent}>\r\n        <div className={classes.tagHeader}>\r\n        <Typography variant=\"h2\"\r\n        style={{\r\n            fontWeight:\"bold\",\r\n            marginBottom:20,\r\n            fontFamily:\"Montserrat\",\r\n        }\r\n        }\r\n        >\r\n            Best Crypto Observer\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\"\r\n        style={{\r\n            color:\"darkgrey\",\r\n            textTransform:\"capitralize\",\r\n            fontFamily:\"Montserrat\",\r\n        }\r\n        }\r\n        >Get any information on cryptocurrency for your fundamental analysis!</Typography>\r\n        </div>\r\n        <Slider/>\r\n    </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner;\r\n","H:\\react\\niar\\src\\config\\api.js",[],"H:\\react\\niar\\src\\components\\CoinInfo.js",["96"],"import { CircularProgress, createTheme, ThemeProvider } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { HistoricalChart } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport { chartDays } from '../config/data';\r\nimport SelectButton from './SelectButton';\r\nimport { Chart as ChartJS, registerables } from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2'\r\nChartJS.register(...registerables);\r\n\r\nconst CoinInfo = ({coin}) => {\r\n\r\n  const theme = createTheme();\r\n\r\n  const [historicalData,setHistoricalData] = useState();\r\n\r\n  const [days,setDays] = useState(1);\r\n\r\n  const {currency} = CryptoState();\r\n\r\n  const [flag,setflag] = useState(false);\r\n\r\n  const fetchHistoricData = async ()=>{\r\n\r\n    const {data} = await axios.get(HistoricalChart(coin.id,days,currency));\r\n\r\n    setflag(true);\r\n\r\n    setHistoricalData(data.prices);\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n    fetchHistoricData();\r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[currency,days]);\r\n\r\n  const darkTheme= createTheme({\r\n    palette:{\r\n      primary:{\r\n        main: \"#fff\",\r\n      },\r\n      mode: \"dark\",\r\n    },\r\n\r\n    text: {\r\n        primary: '#fff',\r\n     \r\n      },\r\n    \r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n  <div style={{\r\n      width: \"75%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 25,\r\n      padding: 40,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n        marginTop: 0,\r\n        padding: 20,\r\n        paddingTop: 0,\r\n      },\r\n    }}>\r\n       {!historicalData | flag===false ? (\r\n          <CircularProgress\r\n            style={{ color: \"#01fdf1\" }}\r\n            size={230}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historicalData.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time =\r\n                    date.getHours() > 12\r\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                  return days === 1 ? time : date.toLocaleDateString();\r\n                }),\r\n\r\n      datasets: [{\r\n          data: historicalData.map((coin) => coin[1]),\r\n          label: `Price ( Past ${days} Days ) in ${currency}`,\r\n          borderColor: \"#01fdf1\",\r\n          },\r\n          ],\r\n        }}\r\n          options={{\r\n          elements: {\r\n          point: {\r\n            radius: 1,\r\n                  },\r\n              },\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                justifyContent: \"space-around\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {chartDays.map((day) => (\r\n                <SelectButton\r\n                  key={day.value}\r\n                  onClick={() => {setDays(day.value);\r\n                    setflag(false);\r\n                  }}\r\n                  selected={day.value === days}\r\n                >\r\n                  {day.label}\r\n                </SelectButton>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinInfo;\r\n","H:\\react\\niar\\src\\config\\data.js",[],"H:\\react\\niar\\src\\components\\Banner\\Slider.js",["97","98"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@mui/styles';\r\nimport { theme } from 'antd';\r\nimport { CryptoState } from '../../CryptoContext';\r\nimport axios from 'axios';\r\nimport { TrendingCoins } from '../../config/api';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\nslider:{\r\n\r\n    height:\"40%\",\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n},\r\n\r\nsliderItem:{\r\n    display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      cursor: \"pointer\",\r\n      textTransform: \"uppercase\",\r\n      color: \"white\",\r\n    },\r\n\r\n}));\r\n\r\nexport function numberWithCommas(x){\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\"\");\r\n}\r\n\r\n\r\nconst Slider = () => {\r\n\r\n    const [trending, setTrending] = useState([]);\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const fetchTrendingCoins = async ()=>  {\r\n\r\n    const {data} = await axios.get(TrendingCoins(currency));\r\n    setTrending(data);\r\n  }\r\n  console.log(trending);\r\n\r\n  useEffect(()=>{\r\n\r\n    fetchTrendingCoins();\r\n },[currency]);\r\n\r\n\r\nconst classes = useStyles();\r\n\r\nconst items= trending.map((coin)=>{\r\n    let profit = coin?.price_change_percentage_24h >= 0;\r\nreturn(\r\n<Link className={classes.sliderItem}\r\n    to ={`/coins/${coin.id}`}>\r\n<img\r\n src={coin?.image}\r\n alt={coin.name}\r\n height=\"80\"\r\n style={{ marginBottom: 10 }}\r\n\r\n></img>\r\n<span>{coin?.symbol}&nbsp;\r\n<span\r\nstyle={{\r\n    color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n    fontWeight: 500,\r\n  }}\r\n>\r\n    {profit && \"+\"}\r\n    {coin?.price_change_percentage_24h?.toFixed(2)}%\r\n</span>\r\n</span>\r\n<span style={{ fontSize: 22, fontWeight: 500 }}>\r\n          {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n        </span>\r\n    </Link>\r\n   \r\n\r\n)\r\n\r\n})\r\n\r\nconst responsive = {\r\n    0:{\r\n        items:2,\r\n    },\r\n    512:{\r\n        items:7,\r\n    }\r\n};\r\n  return (\r\n    <div className={classes.slider}>\r\n      <AliceCarousel \r\n    mouseTracking\r\n    infinite\r\n    autoPlayInterval={1000}\r\n    animationDuration={1500}\r\n    disableDotsControl\r\n    responsive={responsive}\r\n    autoPlay\r\n    items={items}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slider;\r\n","H:\\react\\niar\\src\\components\\SelectButton.js",[],"H:\\react\\niar\\src\\components\\Login.js",[],"H:\\react\\niar\\src\\components\\LogoutButton.js",["99","100","101"],"import { makeStyles } from '@mui/styles';\r\nimport React from 'react'\r\nimport { Amplify } from 'aws-amplify';\r\nimport awsExports from '../aws-exports';\r\nimport { Authenticator } from '@aws-amplify/ui-react';\r\nimport '@aws-amplify/ui-react/styles.css';\r\nconst LogoutButton = (selected, onClick) => {\r\n\r\n    const useStyles = makeStyles({\r\n        logoutButton: {\r\n          border: \"1px solid #01fdf1\",\r\n          borderRadius: 5,\r\n          fontFamily: \"Montserrat\",\r\n          cursor: \"pointer\",\r\n          backgroundColor: selected ? \"#01fdf1\" : \"\",\r\n          color: selected ? \"white\" : \"\",\r\n          fontWeight: selected ? 700 : 500,\r\n          \"&:hover\": {\r\n            backgroundColor: \"#01fdf1\",\r\n            color: \"white\",\r\n          },\r\n          width: \"100px\",\r\n          height:\"50px\",\r\n           marginLeft: 25,\r\n        },\r\n      });\r\n    \r\n      const classes = useStyles();\r\n  return (\r\n\r\n    \r\n      <button  className={classes.logoutButton}>Sign out</button>\r\n    \r\n\r\n  )\r\n}\r\n\r\nexport default LogoutButton;\r\n",{"ruleId":"102","severity":1,"message":"103","line":9,"column":10,"nodeType":"104","messageId":"105","endLine":9,"endColumn":23},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"102","severity":1,"message":"110","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":11},{"ruleId":"102","severity":1,"message":"111","line":3,"column":9,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":17},{"ruleId":"102","severity":1,"message":"113","line":4,"column":19,"nodeType":"104","messageId":"105","endLine":4,"endColumn":22},{"ruleId":"102","severity":1,"message":"114","line":14,"column":30,"nodeType":"104","messageId":"105","endLine":14,"endColumn":36},{"ruleId":"102","severity":1,"message":"115","line":15,"column":22,"nodeType":"104","messageId":"105","endLine":15,"endColumn":31},{"ruleId":"102","severity":1,"message":"116","line":16,"column":10,"nodeType":"104","messageId":"105","endLine":16,"endColumn":19},{"ruleId":"102","severity":1,"message":"117","line":17,"column":10,"nodeType":"104","messageId":"105","endLine":17,"endColumn":18},{"ruleId":"102","severity":1,"message":"118","line":18,"column":8,"nodeType":"104","messageId":"105","endLine":18,"endColumn":17},{"ruleId":"102","severity":1,"message":"119","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":23},{"ruleId":"102","severity":1,"message":"120","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":17},{"ruleId":"102","severity":1,"message":"121","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"102","severity":1,"message":"122","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"123","line":15,"column":9,"nodeType":"104","messageId":"105","endLine":15,"endColumn":25},{"ruleId":"102","severity":1,"message":"124","line":38,"column":8,"nodeType":"104","messageId":"105","endLine":38,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":46,"column":7,"nodeType":"127","endLine":46,"endColumn":17,"suggestions":"128"},{"ruleId":"102","severity":1,"message":"129","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"130","line":11,"column":10,"nodeType":"104","messageId":"105","endLine":11,"endColumn":15},{"ruleId":"102","severity":1,"message":"131","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"125","severity":1,"message":"132","line":49,"column":4,"nodeType":"127","endLine":49,"endColumn":14,"suggestions":"133"},{"ruleId":"102","severity":1,"message":"112","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"102","severity":1,"message":"134","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":18},{"ruleId":"102","severity":1,"message":"119","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'ray' is defined but never used.","'ReactDOM' is defined but never used.","'Amplify' is defined but never used.","'Hub' is defined but never used.","'Router' is defined but never used.","'withTheme' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'awsConfig' is defined but never used.","'Authenticator' is defined but never used.","'NavLink' is defined but never used.","'useNavigate' is defined but never used.","'makeStyles' is defined but never used.","'numberWithCommas' is defined but never used.","'useStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCoins'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'flexbox' is defined but never used.","'Chart' is defined but never used.","'theme' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTrendingCoins'. Either include it or remove the dependency array.",["138"],"'awsExports' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [currency, fetchCoins]",{"range":"143","text":"144"},"Update the dependencies array to be: [currency, fetchTrendingCoins]",{"range":"145","text":"146"},[1149,1159],"[currency, fetchCoins]",[1126,1136],"[currency, fetchTrendingCoins]"]